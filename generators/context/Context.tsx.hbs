import React, { useContext, useState } from "react";

type {{titleCase feature}}ContextType = {
    // example: number;
    // setExample: (c: number) => void;
};

const defaultValues: {{titleCase feature}}ContextType = {
    // example: 0,
    // setExample: () => {},
};

const {{titleCase feature}}Context = React.createContext<{{titleCase feature}}ContextType>(
    defaultValues
);

const {{titleCase feature}}ContextProvider = ({ children }: any) => {
    // const [example, setExample] = useState(0);

    const values: {{titleCase feature}}ContextType = {
        // example,
        // setExample
    };

    return <{{titleCase feature}}Context.Provider value={values}>{children}</{{titleCase feature}}Context.Provider>;
}


const use{{titleCase feature}}Context = () => {
    const context = useContext({{titleCase feature}}Context);
    if (!context) {
        throw new Error("use{{titleCase feature}}Context must be used within {{titleCase feature}}ContextProvider");
    }
    return context;
}

export { {{titleCase feature}}ContextProvider, use{{titleCase feature}}Context };